* Elisa Rothenbuhler - Aug 10* This do-file:* Creates clean household a01 dataset: $cleandatadir/rwhrbf_a01.dta* Creates clean household a01 dataset with study arms: $cleandatadir/rwhrbf_a01_withstudyarms.dta* Creates clean household roster with useful variables for mean tests: * $cleandatadir/rwhrbf_household_roster.dtaversion 10.0clearset more offset mem 500mcap log close#delimit ;log using $logdir/rwanda_cr2_a01_roster.log, replace;		************************ Clean a01 section*********************;	use $origdatadir/RWHRBF_A_HOUSEHOLD-01.dta, clear;drop if a1_02==. & a1_09==. & a1_10_d==. & a1_10_m==. & a1_10_y==. & a1_11a==. & a1_11b==. &a1_12==. & a1_13_1==. & a1_13_2==. & a1_13_3==. & a1_14==. & a1_14al==. & a1_14ag==. & a1_15==. &a1_15al==. & a1_15ag==. & a1_16==. & a1_17==. & a1_18==. & a1_19==. & a1_20==. & a1_21==. &a1_22==. & a1_23==.;drop if hrbf_id1==87 | hrbf_id1==158 | hrbf_id1==166;count;* assert a1_pid!=.;list hrbf_id1 hrbf_id2 a1_pid if a1_pid==.;* br if (hrbf_id1==35 & hrbf_id2==1) | (hrbf_id1==35 & hrbf_id2==8) | (hrbf_id1==35 & hrbf_id2==9) | (hrbf_id1==58 & hrbf_id2==1) | (hrbf_id1==97 & hrbf_id2==5) | (hrbf_id1==157 & hrbf_id2==12);replace a1_pid=1 if hrbf_id1==35 & hrbf_id2==1 & a1_09==1;replace a1_pid=1 if hrbf_id1==35 & hrbf_id2==8 & a1_09==1;replace a1_pid=5 if hrbf_id1==35 & hrbf_id2==9 & a1_pid==.;drop if a1_pid==. & hrbf_id1==58 & hrbf_id2==1;replace a1_pid=1 if hrbf_id1==97 & hrbf_id2==5 & a1_09==1;replace a1_pid=1 if hrbf_id1==157 & hrbf_id2==12 & a1_09==1;* Look at $origdatadir/RWHRBF_B_FEMALE-01.dta;replace a1_pid=2 if hrbf_id1==35 & hrbf_id2==1 & a1_09==2;replace a1_pid=2 if hrbf_id1==97 & hrbf_id2==5 & a1_09==2;replace a1_pid=2 if hrbf_id1==157 & hrbf_id2==12 & a1_09==2;* Look at $origdatadir/RWHRBF_C_CHILD-01.dta;replace a1_pid=7 if hrbf_id1==97 & hrbf_id2==5 & a1_11a<1;****** Household numbers (hrbf_id1-hrbf_id2) 35-1 35-8 97-5 157-12 have 20 household members *** without a PID.*** RETRIEVE HH MEMBERS PIDs FOR HH 35-1, 35-8, 97-5 AND 157-12*** For now: missing PIDs dropped because otherwise merging with other sections not possible***;drop if a1_pid==.;duplicates report hrbf_id1 hrbf_id2 a1_pid;* assert a1_02!=.;list hrbf_id1 hrbf_id2 a1_pid if a1_02==.;* Female only section: are there some PID common to the 7 individuals missing gender?;* use $origdatadir/RWHRBF_B_FEMALE-01.dta;* list hrbf_id1 hrbf_id2 b10_pid if (hrbf_id1==88 & hrbf_id2==8) | (hrbf_id1==88 & hrbf_id2==11) | (hrbf_id1==109 & hrbf_id2==12) | (hrbf_id1==141 & hrbf_id2==3);* Missing genders all female;replace a1_02=2 if a1_02==.;list hrbf_id1 hrbf_id2 a1_pid a1_02 a1_09 if hrbf_id1==172 & hrbf_id2==12;* use $origdatadir/RWHRBF_B_FEMALE-08.dta, clear;* list hrbf_id1 hrbf_id2 b13e_pid if hrbf_id1==172 & hrbf_id2==12;replace a1_02=2 if hrbf_id1==172 & hrbf_id2==12 & a1_pid==2;assert a1_11a<100 | a1_11a==.;tab a1_11a, missing;tab a1_11a if a1_11b==., missing;* assert a1_11a!=. if a1_11b==.; list hrbf_id1 hrbf_id2 a1_pid a1_02 a1_11a a1_11b if (a1_11a==. & a1_11b==.) | (a1_11a==0 & a1_11b==.);tab a1_10_d, nolab;tab a1_10_m, nolab;tab a1_10_y, nolab;list a1_10_d a1_10_m a1_10_y a1_11a a1_11b if a1_10_y==0 | a1_10_y==76 | a1_10_y==81 | a1_10_y==99 | a1_10_y==170| a1_10_y==180 | a1_10_y==197 | a1_10_y==198 | a1_10_y==199 | a1_10_y==200 | a1_10_y==201 | a1_10_y==207 | a1_10_y==1298 | a1_10_y==1882 | a1_10_y==2012 | a1_10_y==2981 | a1_10_y==9999; replace a1_10_y=. if a1_10_y==9999;replace a1_10_y=1981 if a1_10_y==81;replace a1_10_y=1974 if a1_10_y==197;replace a1_10_y=2010 if a1_10_y==201;replace a1_10_y=2000 if a1_10_y==200;replace a1_10_y=2010 if a1_10_y==0;replace a1_10_y=1996 if a1_10_y==199;replace a1_10_y=1940 if a1_10_y==99 & a1_11a==70;replace a1_10_y=. if a1_10_y==99;replace a1_11a=. if a1_10_y==99;replace a1_10_y=1981 if a1_10_y==2981;replace a1_10_y=2007 if a1_10_y==207;replace a1_10_y=1982 if a1_10_y==1298;replace a1_10_y=2010 if a1_10_y==2012;replace a1_10_y=1989 if a1_10_y==198 & a1_11a==21;replace a1_10_y=1985 if a1_10_y==198 & a1_11a==25;replace a1_10_y=1981 if a1_10_y==198 & a1_11a==29;replace a1_10_y=1970 if a1_10_y==170;replace a1_10_y=1980 if a1_10_y==180;replace a1_10_y=1976 if a1_10_y==76;replace a1_10_y=1982 if a1_10_y==1882;replace a1_10_y=1982 if a1_10_y==1882;tab a1_11a, nolab;tab a1_11b, nolab;list a1_10_d a1_10_m a1_10_y a1_11a a1_11b if a1_11b==99;replace a1_11b=. if a1_11b==99;* see below for fixes on ages;* assert a1_13_1==. if a1_12==1 | a1_12==5 | a1_12==6;* assert a1_13_2==. if a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2;* assert a1_13_3==. if a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2;list hrbf_id1 hrbf_id2 a1_pid a1_12 a1_13_1 a1_13_2 a1_13_3 if (a1_13_1!=. & (a1_12==1 | a1_12==5 | a1_12==6)) | (a1_13_2!=. & (a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2)) | (a1_13_3!=. & (a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2)), compress nolabel;forvalues v=1(1)3 {;	replace a1_13_`v'=. if a1_13_`v'==0 | a1_13_`v'==98;};* assert a1_13_1==. if a1_12==1 | a1_12==5 | a1_12==6;* assert a1_13_2==. if a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2;* assert a1_13_3==. if a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2;list hrbf_id1 hrbf_id2 a1_pid a1_12 a1_13_1 a1_13_2 a1_13_3 if (a1_13_1!=. & (a1_12==1 | a1_12==5 | a1_12==6)) | (a1_13_2!=. & (a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2)) | (a1_13_3!=. & (a1_12==1 | a1_12==5 | a1_12==6 | a1_12==2)), compress nolabel;****** Nr partners does not match marital status for 26, 12 and 2 individuals*** VERIFY MARITAL STATUS - PARTNER'S IDs***;tab a1_12, nolab;list a1_12 a1_13_1 a1_13_2 a1_13_3 if a1_12==0;replace a1_12=2 if a1_12==0;tab a1_14al, nolab;replace a1_14al=96 if a1_14al==98 | a1_14al==99;tab a1_14ag, nolab;replace a1_14ag=. if a1_14ag==96 | a1_14ag==98;tab a1_15al, nolab;replace a1_15al=96 if a1_15al==98;replace a1_15al=1 if a1_15al==0;tab a1_17, nolab;replace a1_17=1 if (a1_17==0 & a1_18!=.) | (a1_17==3 & a1_18!=.);replace a1_17=2 if a1_17==3 & a1_18==.;sort hrbf_id1 hrbf_id2;save $cleandatadir/rwhrbf_a01.dta, replace;*************************************** Create rwhrbf_a01_with_studyarms************************************;merge hrbf_id1 hrbf_id2 using $cleandatadir/rwhrbf_a00_withstudyarms.dta, uniqusing keep(a0_result a0_lang_interv a0_lang_respon a0_lang_transl a0_intcode a0_in1_d a0_in1_m a0_in1_y a0_in2_d a0_in2_m a0_in2_y a0_in3_d a0_in3_m a0_in3_y a0_sup a0_sup_d a0_sup_m a0_sup_y a0_deo a0_deo_d a0_deo_m a0_deo_y a0_members a4_10_num a9_01 a9_02 a9_03 group group_code comments hhpweight) sort;tab _merge;drop _merge;save $cleandatadir/rwhrbf_a01_withstudyarms.dta, replace;************************************************************************************** Fix most missing ages by generating it with date of birth and date of interview***********************************************************************************;tab a0_in1_d;tab a0_in1_m;list hrbf_id1 hrbf_id2 hrbf_id2 a0_in1_d a0_in1_m a0_in1_y if a0_in1_m==20;list hrbf_id1 hrbf_id2 hrbf_id2 a0_in1_d a0_in1_m a0_in1_y if hrbf_id1==170;replace a0_in1_m=2 if a0_in1_m==20;tab a0_in1_y;list hrbf_id1 hrbf_id2 hrbf_id2 a0_in1_d a0_in1_m a0_in1_y if a0_in1_y==201 | a0_in1_y==2009;list hrbf_id1 hrbf_id2 hrbf_id2 a0_in1_d a0_in1_m a0_in1_y if hrbf_id1==58 | hrbf_id1==88;replace a0_in1_y=2010 if a0_in1_y==201;egen date_itw_str=concat(a0_in1_d a0_in1_m a0_in1_y), punct(-);tab a1_10_d, nolab;replace a1_10_d=. if a1_10_d==99;tab a1_10_m, nolab;replace a1_10_m=. if a1_10_m==99;tab a1_10_y, nolab;gen a1_10_d2=a1_10_d;replace a1_10_d2=1 if a1_10_d==. & a1_10_y!=.;gen a1_10_m2=a1_10_m;replace a1_10_m2=1 if a1_10_m==. & a1_10_y!=.;egen date_birth_str=concat(a1_10_d2 a1_10_m2 a1_10_y), punct(-);gen datebirth=date(date_birth_str, "DMY");gen dateitw=date(date_itw_str, "DMY");* assert dateitw>=datebirth if datebirth!=.;list hrbf_id1 hrbf_id2 a1_pid a1_11a a1_11b a1_10_d a1_10_m a1_10_y a0_in1_d a0_in1_m a0_in1_y if dateitw<datebirth & datebirth!=.;replace a1_10_y=2009 if hrbf_id1==9 & hrbf_id2==6 & a1_pid==3;replace a1_10_m=3 if hrbf_id1==9 & hrbf_id2==11 & a1_pid==8;replace a1_10_y=2005 if hrbf_id1==26 & hrbf_id2==2 & a1_pid==3;replace a1_10_m=2 if hrbf_id1==40 & hrbf_id2==3 & a1_pid==5;replace a1_10_d=5 if hrbf_id1==48 & hrbf_id2==5 & a1_pid==5;replace a1_10_m=3 if hrbf_id1==48 & hrbf_id2==5 & a1_pid==5;replace a1_10_y=2009 if hrbf_id1==58 & hrbf_id2==2 & a1_pid==4;replace a1_11b=6 if hrbf_id1==58 & hrbf_id2==2 & a1_pid==4;replace a1_10_m=3 if hrbf_id1==59 & hrbf_id2==8 & a1_pid==4;	//unsurereplace a1_11b=1 if hrbf_id1==59 & hrbf_id2==8 & a1_pid==4;	//unsurereplace a1_10_y=2007 if hrbf_id1==60 & hrbf_id2==10 & a1_pid==9;replace a1_10_m=1 if hrbf_id1==84 & hrbf_id2==5 & a1_pid==5;replace a1_10_m=2 if hrbf_id1==84 & hrbf_id2==11 & a1_pid==4;replace a1_11b=1 if hrbf_id1==84 & hrbf_id2==11 & a1_pid==4;replace a1_10_y=2009 if hrbf_id1==88 & hrbf_id2==6 & a1_pid==6;replace a1_10_m=3 if hrbf_id1==89 & hrbf_id2==7 & a1_pid==6;replace a1_10_y=2009 if hrbf_id1==91 & hrbf_id2==2 & a1_pid==4;replace a1_10_m=1 if hrbf_id1==109 & hrbf_id2==3 & a1_pid==4;replace a1_10_d=3 if hrbf_id1==110 & hrbf_id2==11 & a1_pid==3;replace a1_11b=1 if hrbf_id1==110 & hrbf_id2==11 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==111 & hrbf_id2==3 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==111 & hrbf_id2==8 & a1_pid==6;replace a1_10_y=2009 if hrbf_id1==113 & hrbf_id2==12 & a1_pid==4;replace a1_10_y=2009 if hrbf_id1==121 & hrbf_id2==2 & a1_pid==3;replace a1_10_m=3 if hrbf_id1==130 & hrbf_id2==5 & a1_pid==6;replace a1_10_d=4 if hrbf_id1==142 & hrbf_id2==9 & a1_pid==3;	//unsurereplace a1_11b=1 if hrbf_id1==142 & hrbf_id2==9 & a1_pid==3;	//unsurereplace a1_10_y=2009 if hrbf_id1==145 & hrbf_id2==12 & a1_pid==4;replace a1_10_y=2005 if hrbf_id1==149 & hrbf_id2==2 & a1_pid==6;replace a1_10_y=1999 if hrbf_id1==154 & hrbf_id2==2 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==155 & hrbf_id2==1 & a1_pid==4;replace a1_10_y=2009 if hrbf_id1==155 & hrbf_id2==12 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==156 & hrbf_id2==8 & a1_pid==5;replace a1_10_y=2009 if hrbf_id1==172 & hrbf_id2==11 & a1_pid==9;replace a1_10_y=2009 if hrbf_id1==174 & hrbf_id2==12 & a1_pid==7;replace a1_11b=10 if hrbf_id1==174 & hrbf_id2==12 & a1_pid==7;replace a1_10_y=2009 if hrbf_id1==182 & hrbf_id2==12 & a1_pid==2;replace a1_10_y=2009 if hrbf_id1==190 & hrbf_id2==3 & a1_pid==8;replace a1_10_y=2009 if hrbf_id1==191 & hrbf_id2==4 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==193 & hrbf_id2==11 & a1_pid==6;replace a1_10_m=1 if hrbf_id1==200 & hrbf_id2==3 & a1_pid==4;replace a1_10_y=2009 if hrbf_id1==205 & hrbf_id2==1 & a1_pid==8;replace a1_10_y=2009 if hrbf_id1==205 & hrbf_id2==3 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==207 & hrbf_id2==4 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==208 & hrbf_id2==8 & a1_pid==3;replace a1_10_m=2 if hrbf_id1==208 & hrbf_id2==9 & a1_pid==9;replace a1_10_y=2009 if hrbf_id1==211 & hrbf_id2==8 & a1_pid==3;replace a1_10_y=2009 if hrbf_id1==216 & hrbf_id2==4 & a1_pid==3;list hrbf_id1 hrbf_id2 a1_pid a1_11a a1_11b a1_10_d a1_10_m a1_10_y a0_in1_d a0_in1_m a0_in1_y if datebirth==. & a1_10_d!=. & a1_10_m!=. & a1_10_y!=.;replace a1_10_d=28 if hrbf_id1==85 & hrbf_id2==10 & a1_pid==6;replace a1_10_d=21 if hrbf_id1==99 & hrbf_id2==12 & a1_pid==5;replace a1_10_d=28 if hrbf_id1==103 & hrbf_id2==11 & a1_pid==4;replace a1_10_d=30 if hrbf_id1==125 & hrbf_id2==4 & a1_pid==4;replace a1_10_d=21 if hrbf_id1==155 & hrbf_id2==10 & a1_pid==2;replace a1_10_d=28 if hrbf_id1==160 & hrbf_id2==1 & a1_pid==8;replace a1_10_m=1 if hrbf_id1==200 & hrbf_id2==1 & a1_pid==11;list hrbf_id1 hrbf_id2 a1_pid a0_in1_d a0_in1_m a0_in1_y if dateitw==. & a0_in1_d!=. & a0_in1_m!=. & a0_in1_y!=.;drop a1_10_d2 a1_10_m2 date_birth_str datebirth;gen a1_10_d2=a1_10_d;replace a1_10_d2=1 if a1_10_d==. & a1_10_y!=.;gen a1_10_m2=a1_10_m;replace a1_10_m2=1 if a1_10_m==. & a1_10_y!=.;egen date_birth_str=concat(a1_10_d2 a1_10_m2 a1_10_y), punct(-);gen datebirth=date(date_birth_str, "DMY");assert dateitw>=datebirth if datebirth!=.;assert datebirth!=. if a1_10_d!=. & a1_10_m!=. & a1_10_y!=.;sum datebirth, detail;* Have age in years for everyone, plus full age in months for <5 years old too;* assert a1_11b==. if a1_11a>=5 & a1_11a!=.;replace a1_11b=. if a1_11a>=5 & a1_11a!=.;gen age_years=(dateitw-datebirth)/365;tab age_years;gen a1_11a2=a1_11a;replace a1_11a2=age_years if a1_11a==. & a1_11b==.;replace a1_11a2=a1_11b/12 if a1_11a==. & a1_11b!=.;gen age_months=(dateitw-datebirth)/30.5;gen a1_11b2=a1_11b;replace a1_11b2=a1_11b+12*a1_11a if a1_11a!=. & a1_11b!=. & a1_11a<5 & a1_11b<12;replace a1_11b2=12*a1_11a if a1_11a!=. & a1_11b==. & a1_11a<5;replace a1_11b2=age_months if a1_11a==. & a1_11b==. & age_months<12*5;list a1_11a a1_11a2 a1_11b a1_11b2 age_years age_months a1_10_d a1_10_m a1_10_y a0_in1_d a0_in1_m a0_in1_y if _n<20, compress;assert a1_11b2==. if a1_11a2>=5;assert round(a1_11b2)==round(a1_11a2*12) | round(a1_11b2)==round(a1_11a2*12)+round(a1_11b) if a1_11a2<5;replace a1_11a=round(a1_11a2);replace a1_11b=round(a1_11b2);* Note: for those <5 years old, their age in months might be higher than age in years, if for example * they are 3 years and 9 months old, their age in years will be recorded as 3 years because that is their* age at last birthday, whereas they will be recorded as 45 months old (>36); lab var a1_11b "Age/months for <5 years old";drop a1_11a2 a1_11b2 date_itw_str dateitw a1_10_d2 a1_10_m2 date_birth_str datebirth age_years age_months;tab a1_11a, missing;list hrbf_id1 hrbf_id2 a1_pid a1_11a a1_11b a1_10_d a1_10_m a1_10_y a1_10_y if a1_11a==99 ;replace a1_11a=. if a1_11a==99;tab a1_11b, missing;mean a1_11a;mean a1_11b;assert a1_11b==a1_11a*12 | a1_11b<a1_11a*12+12 if a1_11a<5;assert a1_11b==. if a1_11a>=5;list hrbf_id1 hrbf_id2 a1_pid a1_11a a1_11b if a1_11a==.;****** NEED TO RETRIEVE AGE FOR 34 INDIVIDUALS***;sort hrbf_id1 hrbf_id2 a1_pid;save $cleandatadir/rwhrbf_a01_withstudyarms.dta, replace;*********************************** Include age fixes in a01.dta********************************;drop (a0_result a0_lang_interv a0_lang_respon a0_lang_transl a0_intcode a0_in1_d a0_in1_m a0_in1_y a0_in2_d a0_in2_m a0_in2_y a0_in3_d a0_in3_m a0_in3_y a0_sup a0_sup_d a0_sup_m a0_sup_y a0_deo a0_deo_d a0_deo_m a0_deo_y a0_members a4_10_num a9_01 a9_02 a9_03 group group_code comments);sort hrbf_id1 hrbf_id2 a1_pid;save $cleandatadir/rwhrbf_a01.dta, replace;************************************************ Create necessary variables for mean tests*********************************************;use $cleandatadir/rwhrbf_a01_withstudyarms.dta, clear;by hrbf_id1 hrbf_id2: gen a1_hhsize=_N if _n==1;lab var a1_hhsize "Household size";gen a1_09_head=a1_09==1;lab var a1_09_head "Head of household";gen a1_09_spouse=a1_09==2;lab var a1_09_spouse "Spouse";by hrbf_id1 hrbf_id2: egen minage=min(a1_11a);by hrbf_id1 hrbf_id2: gen a1_11a_young=minage==float(a1_11a);drop minage;replace a1_11a_young=0 if a1_11a>=5;lab var a1_11a_young "Youngest child in household (<5y)";gen a1_15_young=.;replace a1_15_young=a1_15 if a1_11a_young==1;by hrbf_id1 hrbf_id2: egen a1_15_youngall=min(a1_15_young);by hrbf_id1 hrbf_id2: gen a1_15_mother=a1_pid==a1_15_youngall;drop a1_15_young a1_15_youngall;lab var a1_15_mother "Mother of youngest <5y child";gen group_code_1=group_code==1;gen group_code_2=group_code==2;gen group_code_3=group_code==3;gen group_code_4=group_code==4;lab var group_code_1 "Demand-side treatment";lab var group_code_2 "Supply-side treatment";lab var group_code_3 "Demand- and supply-side treatment";lab var group_code_4 "Control";gen a1_02_02=a1_02==2;lab var a1_02_02 "Female";gen a1_12_01=a1_12==1;replace a1_12_01=. if a1_12==.;lab var a1_12_01 "Never married";gen a1_12_02=a1_12==2;replace a1_12_02=. if a1_12==.;lab var a1_12_02 "Married/Civil union (monogamous)";gen a1_12_03=a1_12==3;replace a1_12_03=. if a1_12==.;lab var a1_12_03 "Married/Civil union (polygamous)";gen a1_12_04=a1_12==4;replace a1_12_04=. if a1_12==.;lab var a1_12_04 "Cohabitating";gen a1_12_05=a1_12==5;replace a1_12_05=. if a1_12==.;lab var a1_12_05 "Divorced/Separated"; gen a1_12_06=a1_12==6;replace a1_12_06=. if a1_12==.;lab var a1_12_06 "Widowed";gen a1_12_07=a1_12==96;replace a1_12_07=. if a1_12==.;lab var a1_12_07 "Other marital status";gen a1_14_99=a1_14==99;replace a1_14_99=. if a1_14==.;lab var a1_14_99 "Father deceased";gen a1_15_99=a1_15==99;replace a1_15_99=. if a1_15==.;lab var a1_15_99 "Mother deceased";gen a1_15_1=a1_14_99==1 & a1_15_99==1;replace a1_15_1=. if a1_14==. & a1_15==.;lab var a1_15_1 "Both parents deceased";tab a1_14ag a1_14al;gen a1_14ag_1=.;lab var a1_14ag_1 "Nr years of education - father";replace a1_14ag_1=0 if a1_14al==1 | a1_14al==2 | (a1_14al==3 & a1_14ag==0) | a1_14al==8 | (a1_14al==96 & a1_14ag==0);replace a1_14ag_1=1 if a1_14ag==1 & a1_14al==1;replace a1_14ag_1=1 if a1_14al==3 & a1_14ag==1;replace a1_14ag_1=2 if a1_14al==3 & a1_14ag==2;replace a1_14ag_1=3 if a1_14al==3 & a1_14ag==3;replace a1_14ag_1=4 if a1_14al==3 & a1_14ag==4;replace a1_14ag_1=5 if a1_14al==3 & a1_14ag==5;replace a1_14ag_1=6 if a1_14al==3 & a1_14ag==6;replace a1_14ag_1=7 if a1_14al==3 & a1_14ag==7;replace a1_14ag_1=8 if a1_14al==3 & a1_14ag==8;replace a1_14ag_1=7 if a1_14al==4 & a1_14ag==7;replace a1_14ag_1=8 if a1_14al==4 & a1_14ag==8;replace a1_14ag_1=9 if a1_14al==4 & (a1_14ag==9 | a1_14ag==3);replace a1_14ag_1=8 if a1_14al==5 & a1_14ag==0;replace a1_14ag_1=9 if a1_14al==5 & a1_14ag==9;replace a1_14ag_1=10 if a1_14al==5 & (a1_14ag==10 | a1_14ag==1);replace a1_14ag_1=11 if a1_14al==5 & (a1_14ag==11 | a1_14ag==2);replace a1_14ag_1=12 if a1_14al==5 & (a1_14ag==12 | a1_14ag==3);replace a1_14ag_1=13 if a1_14al==6 & a1_14ag==1;replace a1_14ag_1=14 if a1_14al==6 & a1_14ag==2;replace a1_14ag_1=15 if a1_14al==6 & a1_14ag==3;replace a1_14ag_1=16 if a1_14al==6 & a1_14ag==4;replace a1_14ag_1=17 if a1_14al==6 & a1_14ag==5;replace a1_14ag_1=18 if a1_14al==6 & a1_14ag==6;replace a1_14ag_1=7 if a1_14al==7 & (a1_14ag==1 | a1_14ag==7);replace a1_14ag_1=8 if a1_14al==7 & (a1_14ag==2 | a1_14ag==8);replace a1_14ag_1=9 if a1_14al==7 & (a1_14ag==3 | a1_14ag==9);tab a1_15ag a1_15al;gen a1_15ag_1=.;lab var a1_15ag_1 "Nr years of education - mother";replace a1_15ag_1=0 if (a1_15ag==0 & a1_15al!=5) | a1_15ag<3;replace a1_15ag_1=1 if a1_15ag==1 & (a1_15al==1 | a1_15al==2);replace a1_15ag_1=2 if a1_15ag==2 & (a1_15al==1 | a1_15al==2);replace a1_15ag_1=1 if a1_15al==3 & a1_15ag==1;replace a1_15ag_1=2 if a1_15al==3 & a1_15ag==2;replace a1_15ag_1=3 if a1_15al==3 & a1_15ag==3;replace a1_15ag_1=4 if a1_15al==3 & a1_15ag==4;replace a1_15ag_1=5 if a1_15al==3 & a1_15ag==5;replace a1_15ag_1=6 if a1_15al==3 & a1_15ag==6;replace a1_15ag_1=7 if a1_15al==3 & a1_15ag==7;replace a1_15ag_1=8 if a1_15al==3 & a1_15ag==8;replace a1_15ag_1=7 if a1_15al==4 & (a1_15ag==1 | a1_15ag==7);replace a1_15ag_1=8 if a1_15al==4 & (a1_15ag==2 | a1_15ag==8);replace a1_15ag_1=9 if a1_15al==4 & (a1_15ag==3 | a1_15ag==9);replace a1_15ag_1=8 if a1_15al==5 & a1_15ag==0;replace a1_15ag_1=9 if a1_15al==5 & a1_15ag==9;replace a1_15ag_1=10 if a1_15al==5 & (a1_15ag==1 | a1_15ag==10);replace a1_15ag_1=11 if a1_15al==5 & (a1_15ag==2 | a1_15ag==11);replace a1_15ag_1=12 if a1_15al==5 & (a1_15ag==3 | a1_15ag==12);replace a1_15ag_1=13 if a1_15al==6 & a1_15ag==1;replace a1_15ag_1=14 if a1_15al==6 & a1_15ag==2;replace a1_15ag_1=15 if a1_15al==6 & a1_15ag==3;replace a1_15ag_1=16 if a1_15al==6 & a1_15ag==4;replace a1_15ag_1=17 if a1_15al==6 & a1_15ag==5;replace a1_15ag_1=18 if a1_15al==6 & a1_15ag==6;replace a1_15ag_1=7 if a1_15al==7 & (a1_15ag==1 | a1_15ag==7);replace a1_15ag_1=7 if a1_15al==8 & (a1_15ag==2 | a1_15ag==8);replace a1_15ag_1=7 if a1_15al==9 & (a1_15ag==3 | a1_15ag==9);gen a1_14al_2=a1_14ag_1==0;replace a1_14al_2=. if a1_14ag_1==.;lab var a1_14al_2 "Father: no education";gen a1_14al_3=a1_14ag_1>0 & a1_14ag_1<6;replace a1_14al_3=. if a1_14ag_1==.;lab var a1_14al_3 "Father: <primary";gen a1_14al_4=a1_14ag_1==6;replace a1_14al_4=. if a1_14ag_1==.;lab var a1_14al_4 "Father: primary";gen a1_14al_5=a1_14ag_1>6;replace a1_14al_5=. if a1_14ag_1==.;lab var a1_14al_5 "Father: >primary";gen a1_15al_2=a1_15ag_1==0;replace a1_15al_2=. if a1_15ag_1==.;lab var a1_15al_2 "Mother: no education";gen a1_15al_3=a1_15ag_1>0 & a1_15ag_1<6;replace a1_15al_3=. if a1_15ag_1==.;lab var a1_15al_3 "Mother: <primary";gen a1_15al_4=a1_15ag_1==6;replace a1_15al_4=. if a1_15ag_1==.;lab var a1_15al_4 "Mother: primary";gen a1_15al_5=a1_15ag_1>6;replace a1_15al_5=. if a1_15ag_1==.;lab var a1_15al_5 "Mother: >primary";forvalues v=1(1)5 {;	gen a1_16_0`v'=a1_16==`v';	replace a1_16_0`v'=. if a1_16==.;};gen a1_16_96=a1_16==96;replace a1_16_96=. if a1_16==.;lab var a1_16_01 "No religion";lab var a1_16_02 "Catholic";lab var a1_16_03 "Protestant";lab var a1_16_04 "Adventist";lab var a1_16_05 "Muslim";lab var a1_16_96 "Other religion";gen a1_17_01=a1_17==1;replace a1_17_01=. if a1_17==.;lab var a1_17_01 "Away>6 months";gen a1_17_headaway=a1_17==1 & a1_09==1;replace a1_17_headaway=. if a1_17==. | a1_09==.;by hrbf_id1 hrbf_id2: gen a1_17_1=a1_17_headaway[1];drop a1_17_headaway;lab var a1_17_1 "Head of HH away>6 months";gen a1_17_2=a1_17_1==1 & a1_11a_young==1;replace a1_17_2=. if a1_11a_young!=1;lab var a1_17_2 "Child's Head of HH away>6m";gen a1_20_01=a1_20==1;replace a1_20_01=. if a1_20==.;lab var a1_20_01 "Is currently covered by mutuelle";gen a1_22_01=a1_22==1;replace a1_22_01=. if a1_22==.;lab var a1_22_01 "Has been covered by mutuelle"; svyset [pweight=hhpweight], psu(hrbf_id1);save $cleandatadir/rwhrbf_a01_withstudyarms_withvarformeantests.dta, replace;************************************************** Create household roster at individual level***********************************************;keep hrbf_id1 hrbf_id2 a1_pid a1_02 a1_09 a1_09_head a1_09_spouse a1_hhsize a1_11a_young a1_15_mother a1_10_d a1_10_m a1_10_y a1_11a a1_11b a1_12 a1_13_1 a1_13_2 a1_13_3 a1_14 a1_15 a0_result a0_lang_interv a0_lang_respon a0_lang_transl a0_intcode a0_in1_d a0_in1_m a0_in1_y a0_in2_d a0_in2_m a0_in2_y a0_in3_d a0_in3_m a0_in3_y a0_sup a0_sup_d a0_sup_m a0_sup_y a0_deo a0_deo_d a0_deo_m a0_deo_y a0_members a4_10_num a9_01 a9_02 a9_03 group group_code group_code_1 group_code_2 group_code_3 group_code_4 comments hhpweight;order hrbf_id1 hrbf_id2 a1_pid a1_09 a1_09_head a1_09_spouse a1_11a_young a1_15_mother;sort hrbf_id1 hrbf_id2 a1_pid;svyset [pweight=hhpweight], psu(hrbf_id1);save $cleandatadir/rwhrbf_household_roster.dta, replace;log close;